#!/usr/bin/env python3

import requests
import urllib.parse
import urllib3
import re

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

API_URL = "https://api.encrypt.wtf/new/api.php"
TOKEN = "ifindy"
BASE = "telefone2"

def telefone_valido(tel):
    return re.fullmatch(r"\d{10,11}", tel)

def consultar_telefone(telefone):
    if not telefone_valido(telefone):
        print("‚ùå Telefone inv√°lido! Use apenas n√∫meros com DDD (ex: 11987654321)")
        return

    query = urllib.parse.quote(telefone)
    url = f"{API_URL}?token={TOKEN}&base={BASE}&query={query}"

    print(f"\nüîç Consultando n√∫mero: {telefone}")
    print(f"üåê URL: {url}")

    try:
        resp = requests.get(url, timeout=15, verify=False)
        print(f"üì° Status HTTP: {resp.status_code}")

        if resp.status_code == 200:
            try:
                dados = resp.json()
                if isinstance(dados, dict) and not dados:
                    print("‚ö†Ô∏è Consulta v√°lida, mas nenhum dado encontrado.")
                    return
                print("üì¶ Dados encontrados:")
                for k, v in dados.items():
                    print(f"  - {k}: {v}")
            except Exception:
                print("‚ö†Ô∏è Resposta n√£o veio como JSON v√°lido:")
                print(resp.text[:500])
        elif resp.status_code == 400:
            print("‚ùå Erro 400: Requisi√ß√£o malformada ou n√∫mero inexistente no banco de dados.")
        elif resp.status_code == 403:
            print("‚ùå Erro 403: Token inv√°lido ou bloqueado.")
        else:
            print(f"‚ùå Erro inesperado: {resp.status_code} - {resp.text[:200]}")

    except requests.exceptions.Timeout:
        print("‚è±Ô∏è Tempo de resposta excedido!")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Erro na requisi√ß√£o: {e}")

if __name__ == "__main__":
    telefone = input("üì± Digite o n√∫mero com DDD (somente n√∫meros): ").strip()
    consultar_telefone(telefone)
